class Solution {
public:
    string addBoldTag(string s, vector<string>& dict) {
        vector<pair<int,int>> vec = findPairs(dict, s);
        vec = merge(vec);
        for (auto it = vec.rbegin(); it != vec.rend(); it++) {
            s.insert(it->second, "</b>");
            s.insert(it->first, "<b>");
        }
        return s;
    }
    vector<pair<int,int>> findPairs(vector<string>& dict, string s) {
        vector<pair<int,int>> res;
        for(auto word : dict) {
            int sz = word.size();
            for(int i = 0; (i = s.find(word, i)) != string::npos; i++) {
                res.push_back(make_pair(i, i+sz));
            }
        }
        return res;
    }
    vector<pair<int, int>> merge(vector<pair<int,int>>& vec) {
        vector<pair<int,int>> res;
        sort(vec.begin(), vec.end(), cmp);
        for(int i = 0; i < vec.size(); i++) {
            if(res.empty()) {res.push_back(vec[i]); continue;}
            if(res.back().second >= vec[i].first) {
                res.back().second = max(res.back().second, vec[i].second);
            } else {
                res.push_back(vec[i]);
            }
        }
        return res;
    }
    static bool cmp(pair<int,int>& a, pair<int,int>& b) {
        return a.first < b.first || a.first == b.first && a.second < b.second;
    }
};


错误点：
  注意最后插入的时候一定要从后往前插入，因为从前往后插入，插入一个tag都会造成后面所有的index都失效。
