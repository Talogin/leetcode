class Solution {
public:
    int numSubarrayProductLessThanK(vector<int>& nums, int k) {
        int left = 0, right = 0;
        int prod = 1;
        int ret = 0;
        
        if (k <= 1)
            return 0;

        for (right = 0; right < nums.size(); right++) {
            prod *= nums[right];
            while (prod >= k)
                prod /= nums[left++];
            ret += right - left + 1;
        }
        return ret;
    }
};

这题有几个点注意下:
  1.要求的是连续的subarray，一开始以为是要求不连续的
  2.注意sliding window每次更新子串数量的方法
