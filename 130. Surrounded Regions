class Solution {
public:
    void solve(vector<vector<char>>& board) {
        int N = board.size(), M = N ? board[0].size() : 0;
        for(int i = 0; i < N; i += max(N-1, 1))
            for(int j = 0; j < M; j++) 
                if(board[i][j] == 'O')  dfs(board, i, j);                
        for(int j = 0; j < M; j += max(M-1, 1))
            for(int i = 0; i < N; i++)
                if(board[i][j] == 'O')  dfs(board, i, j);
        for(int i = 0; i < N; i++)
            for(int j = 0; j < M; j++)
                if(board[i][j] == 'A')  board[i][j] = 'O';
                else board[i][j] = 'X';
    }
    
    void dfs(vector<vector<char>>& board, int x, int y) {
        if(x < 0 || x >= board.size() || y < 0 || y >= board[0].size()) return;
        if(board[x][y] != 'O')  return;
        
        board[x][y] = 'A';
        dfs(board, x-1, y);
        dfs(board, x+1, y);
        dfs(board, x, y-1);
        dfs(board, x, y+1);
    }
};


错误点：
  1.第5，8行一开始并没有加上max，直接写成了i += N-1和j += M-1，但是有个问题就是你要考虑死循环的情况，就是当N为1，M为1的时候，这个就会死循环。
  
