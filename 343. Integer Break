class Solution {
public:
    int integerBreak(int n) {
        vector<int> dp(n+1);
        dp[1] = 1;
        for(int i = 2; i <= n; i++) {
            for(int j = 1; j < i; j++) {
                dp[i] = max(dp[i], j * dp[i-j]);
            }
            if(i != n) dp[i] = max(dp[i], i);
        } 
        return dp[n];
};

错误点：
  1.没有第10行。如果没有会存在一个问题，比如dp[2] = 1, 但如果计算dp[4]，最大应该是2*2，那么第8行对应的就是2*dp[2]，我们想得到的是dp[2]返回2，但
  实际上计算出的dp[2]是1，所以要有第10行。
  
class Solution {
public:
    int integerBreak(int n) {
        vector<int> dp(n+1);
        dp[1] = 1;
        for(int i = 2; i <= n; i++) {
            for(int j = 1; j < i; j++) {
                dp[i] = max(dp[i], max(dp[j]*(i-j), j*(i-j)));
            }
        }
        return dp.back();
    }
};
二刷犯的错和之前的一样，主要还是逻辑没有想清楚。代码也可以像上面这么写。也就是一个数，像第26行显示的那样，可以分成两个部分，j和i-j，然后j可以有两种情况，
一种是像dp[j]显示的，对它进行拆分；但还有一种情况，就是j可以不拆分。
