class Solution {
public:
    int maxTurbulenceSize(vector<int>& A) {
        int res = 1, dec = 1, inc = 1;
        for(int i = 1; i < A.size(); i++) {
            if(A[i] == A[i-1])  inc = 1, dec = 1;
            else if(i % 2 == 0) A[i] > A[i-1] ? (inc++, dec = 1) : (dec++, inc = 1);
            else    A[i] > A[i-1] ? (dec++, inc = 1) : (inc++, dec = 1);            
            res = max(res, max(inc, dec));
        }
        return res;
    }
};

错误点：
  1.注意第7，8行，如果你真的就想让代码变得更简洁，使用这种写法的话，需要将冒号左右两边加上括号
  
总结：
  这道题呢，我本来的做法是采用两个数组来分别存两种情况下的dp值，其实呢，就单一的情况来看，dp[i]只和dp[i-1]有关系，所以我们就可以将dp数组进行降维，只用
  一个变量来存前一个dp值就可以了。而每个单一情况的dp做法就类似于求和最大的子串一样。
