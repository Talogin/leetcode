class Solution {
public:
    string gcdOfStrings(string s1, string s2) {
        auto sz1 = s1.size(), sz2 = s2.size();
        auto T = s1.substr(0, __gcd(sz1, sz2));
        for (auto p = 0; p < max(sz1, sz2); p += T.size()) {
            if (p < sz1 && s1.compare(p, T.size(), T) != 0) return "";
            if (p < sz2 && s2.compare(p, T.size(), T) != 0) return "";
    }
    return T;
  }
};

思路：
  这题我一开始是想到了如果存在这么一个最长的公共divisor子串，那么这个子串的长度应该同时能被s1和s2的长度整除，那么子串的长度是否就是它们俩的最大公约数呢
  但是我没有细想，就否决了，因为我觉得，这个子串的长度不一定是最大公约数，如果这个子串的长度恰好是某个更小一点的约数呢。
  但是你要知道，假设情况如我所设想的那样，那么这个更小的约数也一定是最大公约数的约数，为什么呢？你想，如果这个这个小约数不是最大公约数的约数，那么小约数
  乘以最大公约数也一定是它们公共的约数，那么小约数与最大公约数的积才是最大公约数。因而更小的约数一定是最大公约数的约数。那么这样一来，这个小约数长度的子串
  重复多次构成最大公约数长度的子串，这个最大公约数长度的子串也一定是divisor。
