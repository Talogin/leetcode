class Solution {
public:
    int search(vector<int>& nums, int target) {
        if(nums.empty())  return -1;
        int low = 0, high = nums.size();
        while(low <= high && low < nums.size()) {
            int mid = (low+high)/2;
            if(nums[mid] == target)  return mid;
            else if(target < nums[mid]) {
                if(nums[low] <= nums[mid]) {
                    if(target < nums[low])  low = mid+1;
                    else    high = mid-1;
                } else {
                    high = mid-1;
                }
                
            } else {
                if(nums[low] > nums[mid]) {
                    if(target >= nums[low])  high = mid-1;
                    else  low = mid+1;
                } else 
                    low = mid+1;
            }
        }
        return -1;
    }
};



class Solution {
public:
    int search(vector<int>& nums, int target) {
        if(nums.empty())    return -1;
        int lo = 0, hi = nums.size()-1;
        while(lo < hi) {
            int mid = lo + (hi-lo)/2;
            if(mid+1 == nums.size() || nums[mid] > nums[mid+1]) {
                lo = hi = mid;
                break;
            }
            if(nums[mid] >= nums[0]) {
                lo = mid+1;
            } else {
                hi = mid-1;
            }
        }
        
        
        if(target >= nums[0]) {
            lo = 0;    
        } else {
            lo++;
            hi = nums.size()-1;
        }
        while(lo <= hi) {
            int mid = lo + (hi-lo)/2;
            if(nums[mid] == target) {
                return mid;
            } 
            if(nums[mid] < target) {
                lo = mid+1;
            } else {
                hi = mid-1;
            }
        }
        return -1;
    }
};
注意：这个问题有些比较容易忽略的地方，一个是有可能整个数组都是呈现上升趋势的，没有转折点。那么你一定要考虑
mid+1 == nums.size() || nums[mid] > nums[mid+1]，mid+1可能会越界，一定要在前面加上判断。
第二个就是else {
            lo++;
            hi = nums.size()-1;
        }
        里面一定要加上lo++，因为你已经断定target是在右半边了，而你lo还指在rotation上，必须要把rotation刨除。
